The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
NameError: name 'matrix' is not defined


>>> print(matrix_divided(None, 2))
Traceback (most recent call last):
...
TypeError: 'NoneType' object is not iterable



>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]

>>> print(matrix_divided(matrix, 0.05))
[[20.0, 40.0, 60.0], [80.0, 100.0, 120.0]]

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> print(matrix_divided(matrix, a))
Traceback (most recent call last):
...
NameError: name 'a' is not defined

>>> print(matrix_divided(matrix, "a"))
Traceback (most recent call last):
...
TypeError: div must be a number


>>> matrix = [
...     [1, 2, 3, 3],
...     [4, 5, 6]
... ]

>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...     [1, 2, "a"],
...     [4, 5, 6]
... ]

>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> print(matrix_divided(matrix))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [
...     [1, 2, -12],
...     [4, 5, 6]
... ]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, -4.0], [1.33, 1.67, 2.0]]
